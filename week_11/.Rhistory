humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
Quarter = quarter(Date)
) %>%
group_by(YearMonth) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
min_windSpeed = min(wind_speed, na.rm = T),
max_windSpeed = max(wind_speed, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
min_humidity = min(humidity, na.rm = T),
max_humidity = max(humidity, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
)
month_year_data
# month_year_data_processed <-
df_to_plot <-  month_year_data %>%
mutate(YearMonth=factor(YearMonth, unique(YearMonth), ordered = T)) %>%
gather(key = "attribute", value="avg_measure", min_temp:mean_humidity) %>%
separate(col = attribute, into = c("type", "variable"), sep = "_") # %>% spread(key = variable, value = avg_measure)
str(df_to_plot)
ggplot(df_to_plot, aes(x=YearMonth, y=avg_measure, colour=type))+
geom_point(aes(y=avg_measure, colour=type))+
geom_path(aes(y=avg_measure, colour=type, group=type), size=1)+
labs(
title = "Distribution of Humidity, Temperature and Wind Speed",
x = "Month and Year",
y = "Temperature(in degree celcius), Humidity(%), Wind Speed(km/h)"
) +
facet_wrap(~variable, ncol = 2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
quarter_year_data <- act_weather_data %>%
mutate(`9am_wind_speed_(km/h)` = ifelse(`9am_wind_speed_(km/h)` == "Calm", 0, as.numeric(`9am_wind_speed_(km/h)`))) %>%
mutate(`3pm_wind_speed_(km/h)` = ifelse(`3pm_wind_speed_(km/h)` == "Calm", 0, as.numeric(`3pm_wind_speed_(km/h)`))) %>%
filter(Date >= "2020-08-01" & Date <= "2021-07-31") %>%
mutate(
wind_speed = as.numeric((`9am_wind_speed_(km/h)` +`3pm_wind_speed_(km/h)`)/2),
temperature = as.numeric(`3pm_Temperature`),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
Quarter = quarter(Date)
) %>%
mutate(YearQuarter=paste(Year,quarter(Date),sep = "-")) %>%
group_by(YearQuarter) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
min_windSpeed = min(wind_speed, na.rm = T),
max_windSpeed = max(wind_speed, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
min_humidity = min(humidity, na.rm = T),
max_humidity = max(humidity, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
)
df_to_plot_2 <- quarter_year_data %>%
mutate(YearQuarter=factor(YearQuarter, unique(YearQuarter), ordered = T)) %>%
gather(key = "attribute", value="avg_measure", min_temp:mean_humidity) %>%
separate(col = attribute, into = c("type", "variable"), sep = "_") # %>% spread(key = variable, value = avg_measure)
str(df_to_plot_2)
ggplot(df_to_plot_2, aes(x=YearQuarter, y=avg_measure, colour=type))+
geom_point(aes(y=avg_measure, colour=type))+
geom_path(aes(y=avg_measure, colour=type, group=type), size=1)+
labs(
title = "Distribution of Humidity, Temperature and Wind Speed",
x = "Quarter and Year",
y = "Temperature(in degree celcius), Humidity(%), Wind Speed(km/h)"
) +
facet_wrap(~variable, ncol = 2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# solution and documentation of the code goes below this line ...
quarter_summary_df <- act_weather_data %>%
mutate(`9am_wind_speed_(km/h)` = ifelse(`9am_wind_speed_(km/h)` == "Calm", 0, as.numeric(`9am_wind_speed_(km/h)`))) %>%
mutate(`3pm_wind_speed_(km/h)` = ifelse(`3pm_wind_speed_(km/h)` == "Calm", 0, as.numeric(`3pm_wind_speed_(km/h)`))) %>%
filter(Date >= "2020-08-01" & Date <= "2021-07-31") %>%
mutate(
wind_speed = as.numeric((`9am_wind_speed_(km/h)` +`3pm_wind_speed_(km/h)`)/2),
temperature = as.numeric(`3pm_Temperature`),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
Quarter = quarter(Date)
) %>%
group_by(Quarter) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
min_windSpeed = min(wind_speed, na.rm = T),
max_windSpeed = max(wind_speed, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
min_humidity = min(humidity, na.rm = T),
max_humidity = max(humidity, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
)
monthly_summary_df <- act_weather_data %>%
mutate(`9am_wind_speed_(km/h)` = ifelse(`9am_wind_speed_(km/h)` == "Calm", 0, as.numeric(`9am_wind_speed_(km/h)`))) %>%
mutate(`3pm_wind_speed_(km/h)` = ifelse(`3pm_wind_speed_(km/h)` == "Calm", 0, as.numeric(`3pm_wind_speed_(km/h)`))) %>%
filter(Date >= "2020-08-01" & Date <= "2021-07-31") %>%
mutate(
wind_speed = as.numeric((`9am_wind_speed_(km/h)` +`3pm_wind_speed_(km/h)`)/2),
temperature = as.numeric(`3pm_Temperature`),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
Quarter = quarter(Date)
) %>%
group_by(Month) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
min_windSpeed = min(wind_speed, na.rm = T),
max_windSpeed = max(wind_speed, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
min_humidity = min(humidity, na.rm = T),
max_humidity = max(humidity, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
)
quarter_summary_df
monthly_summary_df
# plotting data
test_df <- act_weather_data %>%
# filter(Year > 2018 & Year < 2023) %>%
mutate(
avg_temp=(`9am_Temperature`+`3pm_Temperature`)/2,
avg_humidity=(`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2
) %>%
group_by(Year, Month) %>%
summarise(
mean_min_temp=mean(Minimum_temperature),
mean_max_temp=mean(Maximum_temperature),
avg_temp_monthly = mean(avg_temp),
rainfall=mean(`Rainfall_(mm)`),
humidity=mean(avg_humidity)
)
str(test_df)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=mean_min_temp), color="blue", size=1) +
geom_line(aes(y=mean_max_temp), color="red", size=1) +
geom_line(aes(y=avg_temp_monthly), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=mean_min_temp), color="blue", size=1) +
geom_line(aes(y=mean_max_temp), color="red", size=1) +
geom_line(aes(y=avg_temp_monthly), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
# solution and documentation of the code goes below this line ...
library(tidyverse)
AU_Date_Format <- "%d/%m/%Y"
US_Date_Format <- "%m/%d/%Y"
files <- list.files("data","*.csv")
act_weather_data <- tibble()
for(i in 1:length(files)){
data <- read_csv(paste0("data/", files[i]), skip= 7, show_col_types = FALSE)
assertthat::assert_that(nrow(problems(data)) == 0,
msg="There is still problem/s, which you need to fix first")
temp <- tryCatch(
expr    = {  parse_date(data$Date, AU_Date_Format)},
warning = function(e) { parse_date(data$Date, US_Date_Format)})
data$Date <- format(temp, AU_Date_Format)
act_weather_data <- rbind(act_weather_data, data)
}
# Clean up any temporary variables no longer needed
rm(files, data, temp, i)
str(act_weather_data)
summary(act_weather_data)
# checks the datatype of the Date column
class(act_weather_data$Date)
# as the type of date column is character, we will format it using as.Date() function
act_weather_data$Date <-  as.Date(act_weather_data$Date, format=AU_Date_Format)
# check the format of date column again, to ensure everything is as expected
class(act_weather_data$Date)
# seperates the Month and Year column
act_weather_data <- act_weather_data %>%
separate(col = Date, into = c('Year', 'Month', 'Day'), sep = '\\-', remove = F) %>%
mutate(
Year=as.numeric(Year),
Month=as.numeric(Month),
Day=as.numeric(Day)
)
# plotting data
test_df <- act_weather_data %>%
# filter(Year > 2018 & Year < 2023) %>%
mutate(
avg_temp=(`9am_Temperature`+`3pm_Temperature`)/2,
avg_humidity=(`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2
) %>%
group_by(Year, Month) %>%
summarise(
mean_min_temp=mean(Minimum_temperature),
mean_max_temp=mean(Maximum_temperature),
avg_temp_monthly = mean(avg_temp),
rainfall=mean(`Rainfall_(mm)`),
humidity=mean(avg_humidity)
)
str(test_df)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=mean_min_temp), color="blue", size=1) +
geom_line(aes(y=mean_max_temp), color="red", size=1) +
geom_line(aes(y=avg_temp_monthly), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=rainfall), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
# solution and documentation of the code goes below this line ...
act_weather_data %>%
# filter(`9am_wind_speed_(km/h)`== 'Calm' | `3pm_wind_speed_(km/h)` == 'Calm' | `9am_wind_speed_(km/h)` <= 40 | `3pm_wind_speed_(km/h)` <= 40)
mutate(
wind_speed = (as.numeric(`9am_wind_speed_(km/h)`) + as.numeric(`3pm_wind_speed_(km/h)`) )/2,
temperature = as.numeric((`9am_Temperature`+`3pm_Temperature`)/2),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
) %>%
group_by(Month) %>%
summarise(
mean_rainfall=mean(`Rainfall_(mm)`, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
) %>%
filter(mean_temp >= 10 & mean_temp <= 30 & mean_windSpeed <= 40 & mean_humidity >= 30 & mean_humidity <= 70 & mean_rainfall < 3)
act_weather_data %>%
# filter(`9am_wind_speed_(km/h)`== 'Calm' | `3pm_wind_speed_(km/h)` == 'Calm' | `9am_wind_speed_(km/h)` <= 40 | `3pm_wind_speed_(km/h)` <= 40)
mutate(
wind_speed = (as.numeric(`9am_wind_speed_(km/h)`) + as.numeric(`3pm_wind_speed_(km/h)`) )/2,
temperature = as.numeric((`9am_Temperature`+`3pm_Temperature`)/2),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
) %>%
group_by(Month) %>%
summarise(
mean_rainfall=mean(`Rainfall_(mm)`, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
) %>%
filter(mean_temp >= 10 & mean_temp <= 30 & mean_windSpeed <= 40 & mean_humidity >= 30 & mean_humidity <= 70 & mean_rainfall < 3) %>%
summarise(months = Month)
months_suitable_for_road_construction <- act_weather_data %>%
# filter(`9am_wind_speed_(km/h)`== 'Calm' | `3pm_wind_speed_(km/h)` == 'Calm' | `9am_wind_speed_(km/h)` <= 40 | `3pm_wind_speed_(km/h)` <= 40)
mutate(
wind_speed = (as.numeric(`9am_wind_speed_(km/h)`) + as.numeric(`3pm_wind_speed_(km/h)`) )/2,
temperature = as.numeric((`9am_Temperature`+`3pm_Temperature`)/2),
humidity = as.numeric((`9am_relative_humidity_(%)`+`3pm_relative_humidity_(%)`)/2),
) %>%
group_by(Month) %>%
summarise(
mean_rainfall=mean(`Rainfall_(mm)`, na.rm = T),
mean_temp = mean(temperature, na.rm = T),
mean_windSpeed = mean(wind_speed, na.rm = T),
mean_humidity = mean(humidity, na.rm = T)
) %>%
filter(mean_temp >= 10 & mean_temp <= 30 & mean_windSpeed <= 40 & mean_humidity >= 30 & mean_humidity <= 70 & mean_rainfall < 3) %>%
summarise(months = Month)
months_suitable_for_road_construction
paste("The following months are suitable for road construction in ACT, Canberra : ", months_suitable_for_road_construction)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=rainfall), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
ggplot(test_df, aes(x=Month)) +
geom_line(aes(y=rainfall), color="black", size=1) +
scale_x_continuous(breaks = seq(0,12,by=1)) +
facet_wrap(~Year)
setwd("D:/workspace/ids/week_11")
knitr::opts_chunk$set(echo = TRUE)
adv_df <- read_csv("data/Advertising.csv")
adv_df
adv_df[-1]
adv_df <- adv_df[-1]
adv_df
adv_df <- adv_df[-1]
adv_df
adv_df <- read_csv("data/Advertising.csv")
adv_df
adv_df <- adv_df[-1]
adv_df
summary(adv_df)
summarise(adv_df)
?summarise()
ggplot(adv_df, aes(x=newspaper)) +
geom_point(aes(y=sales))
ggplot(adv_df, aes(x=newspaper)) +
geom_point(aes(y=sales), color="red")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red") +
geom_point(aes(y=newspaper), color="blue") +
```
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red") +
geom_point(aes(y=radio), color="blue") +
```
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red") +
geom_point(aes(y=radio), color="blue") +
geom_point(aes(y=TV), color="purple")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=radio), color="blue")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=TV), color="purple")
ggplot(adv_df, aes(x=sales)) +
geom_point(aes(y=newspaper), color="red") +
geom_smooth(method=lm)
ggplot(adv_df) +
geom_point(aes(x=sales, y=newspaper), color="red") +
geom_smooth(method=lm)
ggplot(adv_df) +
geom_point(mapping=aes(x=sales, y=newspaper), color="red") +
geom_smooth(method=lm)
ggplot(adv_df, aes(x=sales, y=newspaper)) +
geom_point( color="red") +
geom_smooth(method=lm)
ggplot(adv_df, aes(x=sales, y=newspaper)) +
geom_point( color="red") +
geom_smooth(method=lm)
ggplot(adv_df, aes(x=sales, y=radio)) +
geom_point(color="blue") +
geom_smooth(method=lm)
ggplot(adv_df, aes(x=sales, y=TV)) +
geom_point(color="purple") +
geom_smooth(method=lm)
r_tv <- cor(adv_df$sales, adv_df$TV)
r_tv
r_news <- cor(adv_df$sales, adv_df$newspaper )
r_news
r_radio <- cor(adv_df$sales, adv_df$radio)
r_radio
cor(adv_df)
install.packages("ggally")
install.packages("GGally")
library(GGally)
ggcorr(adv_df, label = T, label_alpha = T )
ggcorr(adv_df, label = T, label_alpha = T )
cor.test(adv_df$sales, adv_df$TV, "Pearson")
cor.test(adv_df$sales, adv_df$TV, method="Pearson")
cor.test(adv_df$sales, adv_df$TV, method="pearson")
cor_test_results <- cor.test(adv_df$sales, adv_df$TV, method="pearson")
cor_test_results
cor_test_results$p.value
# correlation coefficient
cor_test_results$estimate
# p value
cor_test_results$p.value
# correlation coefficient
cor_test_results$estimate
# correlation coefficient
cor_test_results$estimate
weather_df <- read_csv('data/weather.csv')
weather_df <- read_csv('data/weather_data.csv')
weather_df
str(weather_df)
weather_data
weather_df
weather_df %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
weather_df %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F) %>%
mutate(avg_temp=(`9am_Temperature` + `3pm_Temperature`)/2) %>%
group_by(Month) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T)
)
group_by(month) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T)
)
weather_df %>%
# separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F) %>%
mutate(avg_temp=(`9am_Temperature` + `3pm_Temperature`)/2) %>%
group_by(month) %>%
summarise(
min_temp = min(temperature, na.rm = T),
max_temp = max(temperature, na.rm = T),
mean_temp = mean(temperature, na.rm = T)
)
weather_df %>%
# separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F) %>%
mutate(avg_temp=(`9am_Temperature` + `3pm_Temperature`)/2) %>%
group_by(month) %>%
summarise(
min_temp = min(Minimum_temperature, na.rm = T),
max_temp = max(Maximum_temperature, na.rm = T),
mean_temp = mean(avg_temp, na.rm = T)
)
ggplot(df_to_plot) +
geom_point(aes(x=month, y=min_temp), colour="red")
df_to_plot <- weather_df %>%
# separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F) %>%
mutate(avg_temp=(`9am_Temperature` + `3pm_Temperature`)/2) %>%
group_by(month) %>%
summarise(
min_temp = min(Minimum_temperature, na.rm = T),
max_temp = max(Maximum_temperature, na.rm = T),
mean_temp = mean(avg_temp, na.rm = T)
)
ggplot(df_to_plot) +
geom_point(aes(x=month, y=min_temp), colour="red")
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red")
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1)
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
scale_x_continuous(breaks = seq(1,12,by=1))
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_continuous(breaks = seq(1,12,by=1))
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Month and Year",
y = "Value (in degree celsius)"
)
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Month and Year",
y = "Value (in degree celsius)"
) +
ggtitle("The average, minimum and maximum Temperature in 2019")
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
x = "Month and Year",
y = "Value (in degree celsius)"
) +
ggtitle("The average, minimum and maximum Temperature in 2019")
months = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_discrete(limits=months) +
# scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Month and Year",
y = "Value (in degree celsius)"
)
ggplot(df_to_plot) +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_discrete(limits=months) +
# scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Months",
y = "Value (in degree celsius)"
)
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_discrete(limits=months) +
# scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Months",
y = "Value (in degree celsius)"
)
ggplot(df_to_plot) +
geom_pointe(aes(x=month, y=min_temp), colour="red") +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_discrete(limits=months) +
# scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Months",
y = "Value (in degree celsius)"
)
ggplot(df_to_plot) +
geom_point(aes(x=month, y=min_temp), colour="red") +
geom_line(aes(x=month, y=min_temp), colour="red", size=1) +
geom_line(aes(x=month, y=max_temp), colour="green", size=1) +
geom_line(aes(x=month, y=mean_temp), colour="blue", size=1) +
scale_x_discrete(limits=months) +
# scale_x_continuous(breaks = seq(1,12,by=1)) +
labs(
title = "The average, minimum and maximum Temperature in 2019",
x = "Months",
y = "Value (in degree celsius)"
)
df_to_plot_2 <- df_to_plot %>%
gather(key="metric", value="value", -month)
labs(title = "The average, minimum and maximum Temperature in 2019", x = "Months", y = "Value (in degree celsius)")
ggplot(df_to_plot_2, aes(x=month, y=value, group=metric, colour=metric)) +
scale_x_discrete(limits=months) +
geom_point() +
geom_line() +
labs(title = "The average, minimum and maximum Temperature in 2019", x = "Months", y = "Value (in degree celsius)")
