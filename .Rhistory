knitr::opts_chunk$set(echo = TRUE)
# Assign the value 42 to x
x <-
# Print out the value of the variable x
x
# Assign the value 42 to x
x <- 42
# Print out the value of the variable x
x
# Change the variable's value to -63 and print it
x <- -63
x
# Create another variable called y and assign 32 as its value
y <- 32
# Add the absolute values of the two number and assign the result to variable z
z <- abs(x) + abs(y)
# print x, y, and z
x, y, z
# Assign the value 42 to x
x <- 42
# Print out the value of the variable x
x
# Change the variable's value to -63 and print it
x <- -63
x
# Create another variable called y and assign 32 as its value
y <- 32
# Add the absolute values of the two number and assign the result to variable z
z <- abs(x) + abs(y)
# print x, y, and z
x y z
# Assign the value 42 to x
x <- 42
# Print out the value of the variable x
x
# Change the variable's value to -63 and print it
x <- -63
x
# Create another variable called y and assign 32 as its value
y <- 32
# Add the absolute values of the two number and assign the result to variable z
z <- abs(x) + abs(y)
# print x, y, and z
x
y
z
# Assign the value 42 to x
x <- 42
# Print out the value of the variable x
x
# Change the variable's value to -63 and print it
x <- -63
x
# Create another variable called y and assign 32 as its value
y <- 32
# Add the absolute values of the two number and assign the result to variable z
z <- abs(x) + abs(y)
# print x, y, and z
print("x ",x)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Assign the value 42 to x
x <- 42
# Print out the value of the variable x
x
# Change the variable's value to -63 and print it
x <- -63
x
# Create another variable called y and assign 32 as its value
y <- 32
# Add the absolute values of the two number and assign the result to variable z
z <- abs(x) + abs(y)
# print x, y, and z
x
y
z
# print x, y, and z
paste("X --> ", x, " y --> ", y, "z --> ", z)
# print x, y, and z
paste("X --> ", x, "\ny --> ", y, "\nz --> ", z)
paste("X --> ", x)
paste("y --> ", y)
paste("z --> ", z)
# Declare variables of different types
my_numeric <- 42
my_character <- "70"
my_logical <- FALSE
# Check class of my_numeric
class(my_numeric)
# Check class of my_character
class(my_character)
# Check class of my_logical
class(my_logical)
# Can you fix this to avoid the error
res <- my_numeric + my_character
# Can you fix this to avoid the error
res <- my_numeric + as.numeric(my_character)
knitr::opts_chunk$set(echo = TRUE)
x <- c(0.5, 0.6)       ## numeric
print(x)
x <- c(TRUE, FALSE)    ## logical
print(x)
x <- c(T, F)           ## logical
print(x)
x <- c("a", "b", "c")  ## character
print(x)
x <- 9:29              ## integer
print(x)
x <- c(1+0i, 2+4i)     ## complex
print(x)
letters
# built-in functions
letters # lowercase letters
LETTERS # uppercase letters
print(letters[1:12])
odd_index = seq(from=1, to=26, by=2)
odd_index
letter[odd_index]
letters[odd_index]
vowels <- grep("A|E|I|O|U", LETTERS)
vowels
letters[grep("A|E|I|O|U", LETTERS)]
letters[vowels]
LETTERS[vowels]
even_index
even_index = seq(from=2, to=26, by=2)
even_index
letters[-vowels]
length(letters)
length(letters[-vowels])
weights.people <-  c("Jack",	"Dione", 	"Reda",	"Sally",	"Adam")
weights.lost <- weights.before - weights.after
weights.before <- c(78,	72,	78,	79,	105)
weights.after <- c(67,	65,	79,	70,	93)
weights.lost <- weights.before - weights.after
weights.lost
weights.lost.mean <- mean(weights.lost)
weights.lost.mean
weights.lost.max.index <- which.max(weights.lost)
weights.lost.max.index
paste(weights.people[weights.lost.max.index] , " lost most weight.")
paste(weights.people[weights.lost.max.index] , "lost most weight.")
paste(weights.people[weights.lost.max.index] , "lost most weight of", max(weights.lost))
paste(weights.people[weights.lost.max.index] , "lost most weight of", max(weights.lost), "Kgs")
paste(weights.people[weights.lost.min.index] , "gained most weight of", min(weights.lost), "Kgs")
weights.lost.min.index <- which.min(weights.lost)
weights.lost.min.index
weights.lost
weights.lost.min.index <- which.min(weights.lost)
weights.lost.min.index
paste(weights.people[weights.lost.min.index] , "gained most weight of", min(weights.lost), "Kgs")
paste(weights.people[weights.lost.max.index] , "lost most weight of", max(weights.lost), "Kgs")
paste(weights.people[weights.lost.min.index] , "gained most weight of", min(weights.lost), "Kgs")
max_weight_lost_person = weights.people[weights.lost == min(weights.lost)]
max_weight_lost_person
max_weight_lost_person = weights.people[weights.lost == max(weights.lost)]
max_weight_lost_person
max_weights_lost_person = weights.people[weights.lost == max(weights.lost)]
min_weights_lost_person = weights.people[weights.lost == min(weights.lost)]
min_weights_lost_person
max_weights_lost_person
max_weights_lost_person = weights.people[weights.lost == max(weights.lost)]
max_weights_lost_person
min_weights_lost_person = weights.people[weights.lost == min(weights.lost)]
min_weights_lost_person
person_weight_gained = weights.people[weights.lost < 0]
person_weight_gained
max_weight_lost_index <- weights.lost == max(weights.lost)
max_weight_lost_index
weights.lost == min(weights.lost)
weights.lost == max(weights.lost)
weights.lost == min(weights.lost)
if(any(weights.lost > 0)) {
print("Someone gained weight")
}
if(any(weights.lost < 0)) {
print("Someone gained weight")
}
if(any(weights.lost < -1)) {
print("Someone gained weight")
}
if(any(weights.lost < 0)) {
print("Someone gained weight")
}
}
if(any(weights.lost > 0)) {
print("Someone gained weight")
}
# print odd numbers only
odd_index <- seq(from=1, to=26, by=2)
odd_index
even_index <- seq(from=2, to=26, by=2)
even_index
setwd("D:/workspace/ids")
setwd("D:/workspace/ids")
# print odd numbers only
odd_index <- seq(from=1, to=26, by=2)
odd_index
even_index <- seq(from=2, to=26, by=2)
even_index
