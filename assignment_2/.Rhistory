select(na_cols_names) %>%
mutate(!!sym(column_name), ifelse( is.na(!!sym(column_name)), mode(column_name, act_weather_data), !!sym(column_name))) %>%
is.na(Time_of_maximum_wind_gust) %>%
summarise(n=n())
act_weather_data %>%
select(na_cols_names) %>%
mutate(!!sym(column_name), ifelse( is.na(!!sym(column_name)), mode(column_name, act_weather_data), !!sym(column_name))) %>%
is.na('Time_of_maximum_wind_gust') %>%
summarise(n=n())
act_weather_data %>%
select(na_cols_names) %>%
mutate(!!sym(column_name), ifelse( is.na(!!sym(column_name)), mode(column_name, act_weather_data), !!sym(column_name))) %>%
group_by(Time_of_maximum_wind_gust) %>%
filter(is.na(Time_of_maximum_wind_gust))
all_cols_na_counts
act_weather_data %>%
select(na_cols_names) %>%
mutate(Time_of_maximum_wind_gust, ifelse( Time_of_maximum_wind_gust, mode('Time_of_maximum_wind_gust', act_weather_data), Time_of_maximum_wind_gust)) %>%
group_by(Time_of_maximum_wind_gust) %>%
filter(is.na(Time_of_maximum_wind_gust))
act_weather_data %>%
mutate(!!column_name, ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
count(!!sym(column_name), sort = T)
column_name <- 'Time_of_maximum_wind_gust'
mode_value <-  mode('Time_of_maximum_wind_gust', act_weather_data)
act_weather_data %>%
mutate(!!column_name, ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
count(!!sym(column_name), sort = T)
act_weather_data %>%
mutate(!!sym(column_name), ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
count(!!sym(column_name), sort = T)
act_weather_data %>%
mutate(!!sym(column_name), ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(count=n())
act_weather_data %>%
mutate(!!sym(column_name) := ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(count=n())
act_weather_data %>%
mutate(!!sym(column_name) = ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
act_weather_data %>%
mutate(!!(column_name) = ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
act_weather_data %>%
mutate(!!column_name = ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
act_weather_data %>%
mutate(!!column_name := ifelse(!!sym(column_name), mode_value, !!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(count=n())
# solution and documentation of the code goes below this line ...
act_weather_data$Date
# solution and documentation of the code goes below this line ...
class(act_weather_data$Date)
act_weather_data$Date <- as.Date(act_weather_data$Date)
class(act_weather_data$Date)
act_weather_data %>%
separate(col = Date, into = c('Month', 'Year'), sep = '/', remove = F)
?as.Date
act_weather_data$Date <- as.Date(x = act_weather_data$Date, format=AU_Date_Format)
act_weather_data %>%
separate(col = Date, into = c('Month', 'Year'), sep = '/', remove = F)
as.Date(x = act_weather_data$Date, format=AU_Date_Format)
library(tidyverse)
AU_Date_Format <- "%d/%m/%Y"
US_Date_Format <- "%m/%d/%Y"
files <- list.files("data","*.csv")
act_weather_data <- tibble()
for(i in 1:length(files)){
data <- read_csv(paste0("data/", files[i]), skip= 7, show_col_types = FALSE)
assertthat::assert_that(nrow(problems(data)) == 0,
msg="There is still problem/s, which you need to fix first")
temp <- tryCatch(
expr    = {  parse_date(data$Date, AU_Date_Format)},
warning = function(e) { parse_date(data$Date, US_Date_Format)})
data$Date <- format(temp, AU_Date_Format)
act_weather_data <- rbind(act_weather_data, data)
}
# Clean up any temporary variables no longer needed
rm(files, data, temp, i)
dim(act_weather_data)
str(act_weather_data)
act_weather_data %>%
group_by(Date) %>%
summarise(count=n()) %>%
summarise(max = max(count))
act_weather_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
gather() %>%
filter(value > 0)
# solution and documentation of the code goes below this line ...
class(act_weather_data$Date)
as.Date(act_weather_data$Date, format=AU_Date_Format)
act_weather_data %>%
separate(col = Date, into = c('Month', 'Year'), sep = '/', remove = F)
act_weather_data$Date <-  as.Date(act_weather_data$Date, format=AU_Date_Format)
class(act_weather_data$Date)
act_weather_data %>%
separate(col = Date, into = c('Month', 'Year'), sep = '/', remove = F)
act_weather_data %>%
separate(col = Date, into = c('Month', 'Year'), sep = '\\-', remove = F)
act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
act_weather_data$Date <-  as.Date(act_weather_data$Date)
class(act_weather_data$Date)
act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
act_weather_data$Date <-  as.Date(act_weather_data$Date, format=AU_Date_Format)
act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
class(act_weather_data$Year)
act_weather_data <- act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
act_weather_data <- act_weather_data %>%
separate(col = Date, into = c('Year', 'Month', ), sep = '\\-', remove = F)
act_weather_data <- act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
class(act_weather_data$Year)
act_weather_data
# solution and documentation of the code goes below this line ...
# returns a logical vector that represents if the varaibales have no data at all
all_cols_na_stats <- colSums(is.na(act_weather_data)) == nrow(act_weather_data)
# extract the names of the variables for which, there is no data at all
na_cols <- names(act_weather_data)[all_cols_na_stats]
# removes the columns for which there is no data at all(i.e. all the records in these variables are NAs)
act_weather_data <- act_weather_data %>% select(-na_cols)
act_weather_data
?factor
factor(act_weather_data$Month, levels = 1:12, labels = month.abb)
factor(act_weather_data$Month, levels = 1:12)
unique(act_weather_data$Month)
factor(act_weather_data$Month, levels = unique(act_weather_data$Month))
factor(act_weather_data$Year, levels = unique(act_weather_data$Year))
act_weather_data$Year <- factor(act_weather_data$Year, levels = unique(act_weather_data$Year))
act_weather_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
gather() %>%
filter(value > 0)
act_weather_data %>%
group_by(Date) %>%
summarise(count=n()) %>%
summarise(max = max(count))
act_weather_data %>%
group_by(Date) %>%
summarise(count=n()
str(act_weather_data)
str(act_weather_data)
act_weather_data$Month <- factor(act_weather_data$Month, levels = unique(act_weather_data$Month))
act_weather_data$Year <- factor(act_weather_data$Year, levels = unique(act_weather_data$Year))
str(act_weather_data)
na_cols_names
# get no. of na values in each column
all_cols_na_counts <-  colSums(is.na(act_weather_data))
all_cols_na_counts
# get the names of cols for which there are na values
na_cols_names <- names(all_cols_na_counts[all_cols_na_counts > 0])
na_cols_names
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
}
}
mode('Time_of_maximum_wind_gust')
# function to calculate mode
mode <-  function(column_name, data = act_weather_data) {
mode_df <- data %>%
filter(!is.na(!!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(n=n()) %>%
summarise(mode=(!!sym(column_name))[which.max(n)])
return(mode_df$mode)
}
mode('Time_of_maximum_wind_gust')
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) = replace_na(!!sym(colmn), mode(colmn)))
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
print(colSums(is.na(some_df)) > 0)
}
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
col_stats <- colSums(is.na(some_df))
print(names(col_stats[col_stats > 0]))
}
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
col_stats <- colSums(is.na(some_df))
print(col_stats[col_stats > 0])
}
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
col_stats <- colSums(is.na(some_df))
print(col_stats[col_stats > 0])
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
col_stats <- colSums(is.na(some_df))
print(count(col_stats[col_stats > 0]))
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
col_stats <- colSums(is.na(some_df))
print(ncols(col_stats[col_stats > 0]))
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
col_stats <- colSums(is.na(some_df))
print(dim(col_stats[col_stats > 0]))
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
col_stats <- colSums(is.na(some_df))
print(length(col_stats[col_stats > 0]))
}
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
}
for (colmn in na_cols_names) {
col_stats <- colSums(is.na(some_df))
print(length(col_stats[col_stats > 0]))
if(!is.numeric(act_weather_data[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn, act_weather_data))
some_df <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
}
test_df <- act_weather_data
test_df <- act_weather_data
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(colmn)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats
# function to calculate mode
mode <-  function(column_name, data = act_weather_data) {
mode_df <- data %>%
filter(!is.na(!!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(n=n()) %>%
summarise(mode=(!!sym(column_name))[which.max(n)])
return(mode_df$mode)
}
# get no. of na values in each column
all_cols_na_counts <-  colSums(is.na(act_weather_data))
all_cols_na_counts
# get the names of cols for which there are na values
na_cols_names <- names(all_cols_na_counts[all_cols_na_counts > 0])
na_cols_names
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
cat(colmn, "\n")
print(mode(colmn))
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats
# function to calculate mode
mode <-  function(column_name, data = act_weather_data) {
mode_df <- data %>%
filter(!is.na(!!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(n=n()) %>%
summarise(mode=(!!sym(column_name))[which.max(n)])
return(mode_df$mode)
}
# get no. of na values in each column
all_cols_na_counts <-  colSums(is.na(act_weather_data))
all_cols_na_counts
# get the names of cols for which there are na values
na_cols_names <- names(all_cols_na_counts[all_cols_na_counts > 0])
na_cols_names
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats
test_df <- act_weather_data
col_stats <- colSums(is.na(test_df))
col_stats[col_stats > 0]
for (colmn in na_cols_names) {
if(!is.numeric(test_df[[colmn]])) {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
test_df <- test_df %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(test_df))
col_stats
test_df
# solution and documentation of the code goes below this line ...
# function to calculate mode
mode <-  function(column_name, data = act_weather_data) {
mode_df <- data %>%
filter(!is.na(!!sym(column_name))) %>%
group_by(!!sym(column_name)) %>%
summarise(n=n()) %>%
summarise(mode=(!!sym(column_name))[which.max(n)])
return(mode_df$mode)
}
# get no. of na values in each column
all_cols_na_counts <-  colSums(is.na(act_weather_data))
all_cols_na_counts
# get the names of cols for which there are na values
na_cols_names <- names(all_cols_na_counts[all_cols_na_counts > 0])
na_cols_names
for (colmn in na_cols_names) {
if(!is.numeric(act_weather_data[[colmn]])) {
act_weather_data <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
else {
act_weather_data <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
col_stats <- colSums(is.na(act_weather_data))
col_stats
act_weather_data
col_stats
# solution and documentation of the code goes below this line ...
# function to calculate mode
mode <-  function(column_name, data = act_weather_data) {
mode_df <- data %>%
# removes all the rows na values
filter(!is.na(!!sym(column_name))) %>%
# groups by the column of concern
group_by(!!sym(column_name)) %>%
# takes the count of unique values
summarise(n=n()) %>%
# obtains the values that repeats the most(i.e. mode of the distribution)
summarise(mode=(!!sym(column_name))[which.max(n)])
return(mode_df$mode)
}
# get no. of na values in each column
all_cols_na_counts <-  colSums(is.na(act_weather_data))
all_cols_na_counts
# get the names of cols for which there are na values
na_cols_names <- names(all_cols_na_counts[all_cols_na_counts > 0])
na_cols_names
# loops through each column for which there are na values
for (colmn in na_cols_names) {
# checks if the column is a categorical variables with mode
if(!is.numeric(act_weather_data[[colmn]])) {
act_weather_data <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mode(colmn)))
}
# else it is a numerical column, and replaces na values with the mean
else {
act_weather_data <- act_weather_data %>% mutate(!!sym(colmn) := replace_na(!!sym(colmn), mean(!!sym(colmn),na.rm = T)))
}
}
act_weather_data
# solution and documentation of the code goes below this line ...
class(act_weather_data$Date)
act_weather_data$Date <-  as.Date(act_weather_data$Date, format=AU_Date_Format)
class(act_weather_data$Date)
act_weather_data <- act_weather_data %>%
separate(col = Date, into = c('Year', 'Month'), sep = '\\-', remove = F)
str(act_weather_data)
# solution and documentation of the code goes below this line ...
# The unique(act_weather_data$Month) function is used to extract the unique values present in the "Month" column.
# converts month column into a factor
act_weather_data$Month <- factor(act_weather_data$Month, levels = unique(act_weather_data$Month))
# converts year column into a factor
act_weather_data$Year <- factor(act_weather_data$Year, levels = unique(act_weather_data$Year))
str(act_weather_data)
str(act_weather_data)
act_weather_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
gather() %>%
filter(value > 0)
act_weather_data %>%
group_by(Date) %>%
summarise(count=n()) %>%
summarise(max = max(count))
str(act_weather_data)
dim(act_weather_data)
act_weather_data %>%
summarise_all(funs(sum(is.na(.)))) %>%
gather() %>%
filter(value > 0)
setwd("D:/workspace/ids/assignment_2")
write.csv(act_weather_data, file = "output/act_weather_data_partA.csv")
write.csv(act_weather_data, file = "output/act_weather_data_partA.csv")
